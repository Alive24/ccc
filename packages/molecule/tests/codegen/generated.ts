// This file is generated by @ckb-lumos/molecule, please do not modify it manually.
/* eslint-disable */

import { bytesFrom, BytesLike, ccc, hexFrom, mol } from "@ckb-ccc/core";

const fallbackBytesCodec = mol.Bytes;

const byte = mol.Byte;

function createFallbackFixedBytesCodec(byteLength: number) {
  return mol.Codec.from({
    byteLength,
    encode: (value) => bytesFrom(value as ccc.Bytes),
    decode: (buffer) => hexFrom(buffer),
  });
}

export const Byte2 = createFallbackFixedBytesCodec(2);

export const Byte3 = createFallbackFixedBytesCodec(3);

export const Byte4 = createFallbackFixedBytesCodec(4);

export const Byte5 = createFallbackFixedBytesCodec(5);

export const Byte6 = createFallbackFixedBytesCodec(6);

export const Byte7 = createFallbackFixedBytesCodec(7);

export const Byte8 = createFallbackFixedBytesCodec(8);

export const Byte9 = createFallbackFixedBytesCodec(9);

export const Byte10 = createFallbackFixedBytesCodec(10);

export const Byte11 = createFallbackFixedBytesCodec(11);

export const Byte12 = createFallbackFixedBytesCodec(12);

export const Byte13 = createFallbackFixedBytesCodec(13);

export const Byte14 = createFallbackFixedBytesCodec(14);

export const Byte15 = createFallbackFixedBytesCodec(15);

export const Byte16 = createFallbackFixedBytesCodec(16);

export const Word = createFallbackFixedBytesCodec(2);

export const Word2 = mol.array(Word, 2);

export const Word3 = mol.array(Word, 3);

export const Word4 = mol.array(Word, 4);

export const Word5 = mol.array(Word, 5);

export const Word6 = mol.array(Word, 6);

export const Word7 = mol.array(Word, 7);

export const Word8 = mol.array(Word, 8);

export const Byte3x3 = mol.array(Byte3, 3);

export const Byte5x3 = mol.array(Byte5, 3);

export const Byte7x3 = mol.array(Byte7, 3);

export const Byte9x3 = mol.array(Byte9, 3);

export const StructA = mol.struct({
  f1: byte,
  f2: byte,
  f3: Byte2,
  f4: Byte2,
});

export const StructB = mol.struct({
  f1: byte,
  f2: byte,
  f3: Byte2,
  f4: Byte3,
});

export const StructC = mol.struct({
  f1: byte,
  f2: byte,
  f3: Byte2,
  f4: Byte4,
});

export const StructD = mol.struct({
  f1: byte,
  f2: byte,
  f3: Byte2,
  f4: Byte5,
});

export const StructE = mol.struct({
  f1: byte,
  f2: Byte2,
  f3: byte,
  f4: Byte2,
});

export const StructF = mol.struct({
  f1: byte,
  f2: Byte3,
  f3: byte,
});

export const StructG = mol.struct({
  f1: Byte3,
  f2: byte,
  f3: Byte2,
  f4: Word2,
});

export const StructH = mol.struct({
  f1: Byte3,
  f2: byte,
  f3: Byte2,
  f4: Byte4,
});

export const StructI = mol.struct({
  f1: Byte3,
  f2: byte,
});

export const StructJ = mol.struct({
  f1: Byte6,
  f2: byte,
});

export const StructIx3 = mol.array(StructI, 3);

export const StructO = mol.struct({
  f1: StructIx3,
  f2: byte,
});

export const StructP = mol.struct({
  f1: StructJ,
  f2: byte,
});

export const Bytes = fallbackBytesCodec;

export const Words = mol.vector(Word);

export const Byte3Vec = mol.vector(Byte3);

export const Byte7Vec = mol.vector(Byte7);

export const StructIVec = mol.vector(StructI);

export const StructJVec = mol.vector(StructJ);

export const StructPVec = mol.vector(StructP);

export const BytesVec = mol.vector(Bytes);

export const WordsVec = mol.vector(Words);

export const Table0 = mol.table({});

export const Table1 = mol.table({
  f1: byte,
});

export const Table2 = mol.table({
  f1: byte,
  f2: Word2,
});

export const Table3 = mol.table({
  f1: byte,
  f2: Word2,
  f3: StructA,
});

export const Table4 = mol.table({
  f1: byte,
  f2: Word2,
  f3: StructA,
  f4: Bytes,
});

export const Table5 = mol.table({
  f1: byte,
  f2: Word2,
  f3: StructA,
  f4: Bytes,
  f5: BytesVec,
});

export const Table6 = mol.table({
  f1: byte,
  f2: Word2,
  f3: StructA,
  f4: Bytes,
  f5: BytesVec,
  f6: Table5,
});

export const ByteOpt = mol.option(byte);

export const WordOpt = mol.option(Word);

export const StructAOpt = mol.option(StructA);

export const StructPOpt = mol.option(StructP);

export const BytesOpt = mol.option(Bytes);

export const WordsOpt = mol.option(Words);

export const BytesVecOpt = mol.option(BytesVec);

export const WordsVecOpt = mol.option(WordsVec);

export const Table0Opt = mol.option(Table0);

export const Table6Opt = mol.option(Table6);

export const Table6OptOpt = mol.option(Table6Opt);

export const ByteOptVec = mol.vector(ByteOpt);

export const WordOptVec = mol.vector(WordOpt);

export const WordsOptVec = mol.vector(WordsOpt);

export const BytesOptVec = mol.vector(BytesOpt);

export const UnionA = mol.union({
  byte,
  Word,
  StructA,
  Bytes,
  Words,
  Table0,
  Table6,
  Table6Opt,
});

export const TableA = mol.table({
  f1: Word2,
  f2: StructA,
  f3: Bytes,
  f4: BytesVec,
  f5: Table1,
  f6: BytesOpt,
  f7: UnionA,
  f8: byte,
});

export const AllInOne = mol.table({
  f0: byte,
  f1: Byte2,
  f2: Byte3,
  f3: Byte4,
  f4: Byte5,
  f5: Byte6,
  f6: Byte7,
  f7: Byte8,
  f8: Byte9,
  f9: Byte10,
  f10: Byte11,
  f11: Byte12,
  f12: Byte13,
  f13: Byte14,
  f14: Byte15,
  f15: Byte16,
  f16: Word,
  f17: Word2,
  f18: Word3,
  f19: Word4,
  f20: Word5,
  f21: Word6,
  f22: Word7,
  f23: Word8,
  f24: Byte3x3,
  f25: Byte5x3,
  f26: Byte7x3,
  f27: Byte9x3,
  f28: StructA,
  f29: StructB,
  f30: StructC,
  f31: StructD,
  f32: StructE,
  f33: StructF,
  f34: StructG,
  f35: StructH,
  f36: StructI,
  f37: StructJ,
  f38: StructIx3,
  f39: StructO,
  f40: StructP,
  f41: Bytes,
  f42: Words,
  f43: Byte3Vec,
  f44: Byte7Vec,
  f45: StructIVec,
  f46: StructJVec,
  f47: StructPVec,
  f48: BytesVec,
  f49: WordsVec,
  f50: Table0,
  f51: Table1,
  f52: Table2,
  f53: Table3,
  f54: Table4,
  f55: Table5,
  f56: Table6,
  f57: ByteOpt,
  f58: WordOpt,
  f59: StructAOpt,
  f60: StructPOpt,
  f61: BytesOpt,
  f62: WordsOpt,
  f63: BytesVecOpt,
  f64: WordsVecOpt,
  f65: Table0Opt,
  f66: Table6Opt,
  f67: Table6OptOpt,
  f68: ByteOptVec,
  f69: WordOptVec,
  f70: WordsOptVec,
  f71: BytesOptVec,
  f72: UnionA,
  f73: TableA,
});
